(in-package #:graph)

(defun hw4-3a ()
  (let ((graph (make-graph :directed? t)))
    (add-node graph "a")
    (add-node graph "b")
    (add-node graph "c")
    (add-node graph "d")
    (add-node graph "e")
    (add-node graph "f")
    (add-node graph "x")
    (add-node graph "y")
    (add-node graph "z")
    (add-edge graph "c" "a")
    (add-edge graph "d" "a")
    (add-edge graph "e" "a")
    (add-edge graph "e" "b")
    (add-edge graph "f" "b")
    (add-edge graph "y" "x")
    (add-edge graph "z" "x")
    (add-edge graph "y" "a")
    (add-edge graph "z" "a")
    (compute-hub-authority-values graph :normalize? t)))

